version: "3.9"

services:
  image-registry:
    container_name: image-registry
    image: registry:latest
    volumes:
      - "../data/image-registry:/var/lib/registry"
    ports:
      - "5000:5000"
    restart: always
    environment:
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '[*]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS,DELETE]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'

  image-registry-ui:
    container_name: image-registry-ui
    image: konradkleine/docker-registry-frontend:v2
    ports:
      - "8080:80"
    restart: always
    environment:
      - ENV_DOCKER_REGISTRY_HOST=image-registry
      - ENV_DOCKER_REGISTRY_PORT=5000

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.7
    volumes:
      - "kafka_data:/bitnami"
    ports:
      - "9092:9092"
    restart: always
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

volumes:
  kafka_data:
    driver: local