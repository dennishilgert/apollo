syntax = "proto3";

package apollo.proto.fleet.v1;

import "google/protobuf/struct.proto";
import "apollo/proto/shared/v1/shared.proto";

option go_package = "github.com/dennishilgert/apollo/pkg/proto/fleet/v1;fleet";

service FleetManager {
  rpc Prepare(PrepareRunnerRequest) returns (apollo.proto.shared.v1.EmptyResponse) {}
  rpc Invoke(InvokeFunctionRequest) returns (InvokeFunctionResponse) {}
}

message PrepareRunnerRequest {
  string kernel_name = 1;
  string kernel_version = 2;
  string runtime_name = 3;
  string runtime_version = 4;
  string function_uuid = 5;
}

message InvokeFunctionRequest {
  RunnerSpecs function = 1;
  RuntimeSpecs runtime = 2;
  EventSpecs event = 3; 
}

message RunnerSpecs {
  string id = 1;
  string kernel_image_path = 2;
  string root_drive_path = 3;
  string code_drive_path = 4;
  int32 memory_limit = 5;
  int32 vcpu_cores = 6;
}

message RuntimeSpecs {
  string name = 1;
  string version = 2;
  string handler = 3;
  string binary_path = 4;
  repeated string binary_args = 5;
}

message EventSpecs {
  string id = 1;
  string type = 2;
  string source_ip = 3;
  map<string, string> params = 4;
  google.protobuf.Struct data = 5;
}

message InvokeFunctionResponse {
  string event_id = 1;
  int32 status = 2;
  string status_message = 3;
  google.protobuf.Struct data = 5;
}